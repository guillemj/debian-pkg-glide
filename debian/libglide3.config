#!/usr/bin/perl -w
# Copyright (C) 2000  Zephaniah E. Hull.
# This code is under the GNU GPL, see /usr/share/common-licenses/GPL.

use strict;
use Debconf::Client::ConfModule ':all';

main();

my (%types);
BEGIN {
    %types = (
	"Voodoo Banshee"	=> "h3",
	"Voodoo Banshee [Velocity 100]" => "h3",
	"Voodoo 3"		=> "h3",
	"Voodoo 4"		=> "h5",
	"Voodoo 4 / Voodoo 5"	=> "h5",
	"Voodoo 5"		=> "h5",
    );
}

sub main {
    my (@cards, $driver);
    version('2.0');
    title('glide3 configuration');

    @cards = get_devices();
    if ($#cards == -1) {
	my ($choice);
	input('low', 'libglide3/no_card');
	go();
	$choice = get('libglide3/no_card');
	if ($choice eq "true") {
	    input('low', 'libglide3/driver');
	    go();
	} else {
	    set('libglide3/driver', 'h5');
	    go();
	}
    } elsif ($#cards == 0) {
	set('libglide3/driver', ${$cards[0]}{'Driver'});
	go();
    } else {
	my (%card, $card, $choices, %choices, $choice, $tmp);

	for $card (@cards) {
	    %card = %$card;
	    if (defined($card{'SVendor'})) {
		$tmp = sprintf("%s %s (%s)", $card{'SVendor'},
			       $card{'SDevice'}, $card{'Device'});
	    } else {
		$tmp = sprintf("3Dfx %s", $card{'Device'});
	    }
	    $tmp =~ s/,//g;

	    $choices{$tmp} = $card{'Driver'};
	}

	$choices = join(', ', keys(%choices));
	subst('libglide3/card', 'choices', $choices);
	input('high', 'libglide3/card');
	go();
	$choice = get('libglide3/card');

	$tmp = $choices{$choice};
	set('libglide3/driver', $tmp);
    }

#    stop();
}

sub get_devices {
    my ($raw, $dev, $line, $tmp, @cards);
    $raw = `lspci -vm`;

    foreach $dev (split(/\n\n/, $raw)) {
	my (%info);
	foreach $line (split(/\n/, $dev)) {
	    if($line =~ /^(Class|Vendor|Device|SVendor|SDevice|Rev):\s+(.*)$/) {
		$info{$1} = $2;
	    }
	}
	if (defined($types{$info{'Device'}})) {
	    $info{"Driver"} = $types{$info{"Device"}};
	    push(@cards, \%info);
	}
    }

    return @cards;
}
