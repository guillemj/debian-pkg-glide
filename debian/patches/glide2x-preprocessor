Status: applied

Index: b/glide2x/h3/glide/src/fxglide.h
===================================================================
--- a/glide2x/h3/glide/src/fxglide.h
+++ b/glide2x/h3/glide/src/fxglide.h
@@ -3356,16 +3356,16 @@ double_precision_asm(void);
 //#define GLIDE3_DEBUG 1
 #endif
 #ifdef GLIDE3_DEBUG
-#define TEX_INFO(ptr,field)                         ptr##field
+#define TEX_INFO(ptr,field)                         ptr.field
 #define G3_LOD_TRANSLATE(lod)                       (lod)
 #define G3_ASPECT_TRANSLATE(aspect)                 (aspect)
 #else
-#define TEX_INFO(ptr,field)                         ptr##field##Log2
+#define TEX_INFO(ptr,field)                         ptr.field ## Log2
 #define G3_LOD_TRANSLATE(lod)                       (0x8-lod)
 #define G3_ASPECT_TRANSLATE(aspect)                 (0x3-(aspect))
 #endif /* GLIDE3_DEBUG */
 #else
-#define TEX_INFO(ptr,field)                         ptr##field
+#define TEX_INFO(ptr,field)                         ptr.field
 #define G3_LOD_TRANSLATE(lod)                       (lod)
 #define G3_ASPECT_TRANSLATE(aspect)                 (aspect)
 #endif
Index: b/glide2x/h3/glide/src/gsplash.c
===================================================================
--- a/glide2x/h3/glide/src/gsplash.c
+++ b/glide2x/h3/glide/src/gsplash.c
@@ -242,9 +242,9 @@ static void 
 downloadTexture(Texture *texture, Gu3dfInfo *info) 
 {
   texture->info.data        = info->data;
-  TEX_INFO(texture->info.,smallLod)    = info->header.small_lod;
-  TEX_INFO(texture->info.,largeLod)    = info->header.large_lod;
-  TEX_INFO(texture->info.,aspectRatio) = info->header.aspect_ratio;
+  TEX_INFO(texture->info,smallLod)    = info->header.small_lod;
+  TEX_INFO(texture->info,largeLod)    = info->header.large_lod;
+  TEX_INFO(texture->info,aspectRatio) = info->header.aspect_ratio;
   texture->info.format      = info->header.format;
 
   texture->addr = nextFreeBase;
