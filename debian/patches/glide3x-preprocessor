Status: applied
Origin: vendor
Applied-Upstream: 2002.04.10+
Forwarded: not-needed

---
Index: b/glide3x/cvg/glide3/src/fxglide.h
===================================================================
--- a/glide3x/cvg/glide3/src/fxglide.h
+++ b/glide3x/cvg/glide3/src/fxglide.h
@@ -1417,7 +1417,7 @@ extern GrGCFuncs _curGCFuncs;
 
 #ifdef GLIDE3
 #define GR_STATE_ENTRY(name, type, args) \
-   type _##name## args
+   type _ ## name args
 #else
 #define GR_STATE_ENTRY(name, type, args) \
    GR_ENTRY(name, type, args)
Index: b/glide3x/h3/glide3/src/fxglide.h
===================================================================
--- a/glide3x/h3/glide3/src/fxglide.h
+++ b/glide3x/h3/glide3/src/fxglide.h
@@ -1512,7 +1512,7 @@ extern GrGCFuncs _curGCFuncs;
 
 #ifdef GLIDE3
 #define GR_STATE_ENTRY(name, type, args) \
-   type _##name## args
+   type _ ## name args
 #else
 #define GR_STATE_ENTRY(name, type, args) \
    GR_ENTRY(name, type, args)
@@ -1831,7 +1831,7 @@ extern FxU32 threadValueLinux;
 #define CUR_TRI_PROC(__checkValidP, __cullP) \
   (*gc->archDispatchProcs.coorModeTriVector)[__checkValidP][__cullP]
 #define INVALIDATE(regset) {\
-  gc->state.invalid |= ##regset##BIT; \
+  gc->state.invalid |= regset ## BIT; \
   gc->triSetupProc = CUR_TRI_PROC(FXTRUE, (gc->state.cull_mode != GR_CULL_DISABLE)); \
 }
 
Index: b/glide3x/h5/glide3/src/fxglide.h
===================================================================
--- a/glide3x/h5/glide3/src/fxglide.h
+++ b/glide3x/h5/glide3/src/fxglide.h
@@ -2119,7 +2119,7 @@ extern GrGCFuncs _curGCFuncs;
 
 #ifdef GLIDE3
 #define GR_STATE_ENTRY(name, type, args) \
-   type _##name## args
+   type _ ## name args
 #else
 #define GR_STATE_ENTRY(name, type, args) \
    GR_ENTRY(name, type, args)
@@ -2626,13 +2626,13 @@ extern FxU32 threadValueLinux;
 #define CUR_TRI_PROC(__checkValidP, __cullP) \
   (*gc->archDispatchProcs.coorModeTriVector)[__checkValidP][__cullP]
 #define INVALIDATE(regset) {\
-  gc->state.invalid |= ##regset##BIT; \
+  gc->state.invalid |= regset ## BIT; \
   gc->triSetupProc = CUR_TRI_PROC(FXTRUE, (gc->state.cull_mode != GR_CULL_DISABLE)); \
 }
 
 #define INVALIDATE_TMU(tmu, regset) {\
   INVALIDATE(tmuConfig); \
-  gc->state.tmuInvalid[tmu] |= ##regset##BIT; \
+  gc->state.tmuInvalid[tmu] |= regset ## BIT; \
 }
   
 void 
Index: b/glide3x/cvg/glide3/src/distate.c
===================================================================
--- a/glide3x/cvg/glide3/src/distate.c
+++ b/glide3x/cvg/glide3/src/distate.c
@@ -166,25 +166,25 @@
  */
 
 #define STOREARG(function, arg) \
-gc->state.stateArgs.##function##Args.arg = arg
+gc->state.stateArgs.function ## Args.arg = arg
 
 #define LOADARG(function, arg) \
-gc->state.stateArgs.##function##Args.arg
+gc->state.stateArgs.function ## Args.arg
 
 #define INVALIDATE(regset) \
-gc->state.invalid |= ##regset##BIT
+gc->state.invalid |= regset ## BIT
 
 #define NOTVALID(regset) \
-(gc->state.invalid & ##regset##BIT)
+(gc->state.invalid & regset ## BIT)
 
 #define SETVALID(regset) \
-(gc->state.invalid &= ~(##regset##BIT))
+(gc->state.invalid &= ~(regset ## BIT))
 
 #define ENABLEMODE(mode) \
-gc->state.grEnableArgs.##mode## = GR_MODE_ENABLE;
+gc->state.grEnableArgs.mode = GR_MODE_ENABLE;
 
 #define DISABLEMODE(mode) \
-gc->state.grEnableArgs.##mode## = GR_MODE_DISABLE;
+gc->state.grEnableArgs.mode = GR_MODE_DISABLE;
 
 /*-------------------------------------------------------------------
   Function: grAlphaBlendFunction
Index: b/glide3x/h3/glide3/src/distate.c
===================================================================
--- a/glide3x/h3/glide3/src/distate.c
+++ b/glide3x/h3/glide3/src/distate.c
@@ -203,23 +203,23 @@
  */
 
 #define STOREARG(function, arg) \
-gc->state.stateArgs.##function##Args.arg = arg
+gc->state.stateArgs.function ## Args.arg = arg
 
 #define LOADARG(function, arg) \
-gc->state.stateArgs.##function##Args.arg
+gc->state.stateArgs.function ## Args.arg
 
 
 #define NOTVALID(regset) \
-(gc->state.invalid & ##regset##BIT)
+(gc->state.invalid & regset ## BIT)
 
 #define SETVALID(regset) \
-(gc->state.invalid &= ~(##regset##BIT))
+(gc->state.invalid &= ~(regset ## BIT))
 
 #define ENABLEMODE(mode) \
-gc->state.grEnableArgs.##mode## = GR_MODE_ENABLE;
+gc->state.grEnableArgs.mode = GR_MODE_ENABLE;
 
 #define DISABLEMODE(mode) \
-gc->state.grEnableArgs.##mode## = GR_MODE_DISABLE;
+gc->state.grEnableArgs.mode = GR_MODE_DISABLE;
 
 /*-------------------------------------------------------------------
   Function: grAlphaBlendFunction
Index: b/glide3x/h5/glide3/src/distate.c
===================================================================
--- a/glide3x/h5/glide3/src/distate.c
+++ b/glide3x/h5/glide3/src/distate.c
@@ -349,31 +349,31 @@
  */
 
 #define STOREARG_TMU(function, tmu, arg) \
-gc->state.stateArgs.##function##Args.arg[tmu] = arg
+gc->state.stateArgs.function ## Args.arg[tmu] = arg
 
 #define LOADARG_TMU(function, tmu, arg) \
-gc->state.stateArgs.##function##Args.arg[tmu]
+gc->state.stateArgs.function ## Args.arg[tmu]
 
 #define STOREARG(function, arg) \
-gc->state.stateArgs.##function##Args.arg = arg
+gc->state.stateArgs.function ## Args.arg = arg
 
 #define LOADARG(function, arg) \
-gc->state.stateArgs.##function##Args.arg
+gc->state.stateArgs.function ## Args.arg
 
 #define NOTVALID(regset) \
-(gc->state.invalid & ##regset##BIT)
+(gc->state.invalid & regset ## BIT)
 
 #define NOTVALID_TMU(tmu, regset) \
-(gc->state.tmuInvalid[tmu] & ##regset##BIT)
+(gc->state.tmuInvalid[tmu] & regset ## BIT)
 
 #define SETVALID(regset) \
-(gc->state.invalid &= ~(##regset##BIT))
+(gc->state.invalid &= ~(regset ## BIT))
 
 #define ENABLEMODE(mode) \
-gc->state.grEnableArgs.##mode## = GR_MODE_ENABLE;
+gc->state.grEnableArgs.mode = GR_MODE_ENABLE;
 
 #define DISABLEMODE(mode) \
-gc->state.grEnableArgs.##mode## = GR_MODE_DISABLE;
+gc->state.grEnableArgs.mode = GR_MODE_DISABLE;
 
 /*-------------------------------------------------------------------
   Function: grAlphaBlendFunction
